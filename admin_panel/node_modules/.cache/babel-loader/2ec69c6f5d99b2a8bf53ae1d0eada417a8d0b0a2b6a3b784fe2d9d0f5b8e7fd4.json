{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\crud\\\\src\\\\components\\\\ItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemForm = ({\n  fetchItems,\n  selectedItem,\n  clearSelection\n}) => {\n  _s();\n  const [form, setForm] = useState({\n    name: (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.name) || '',\n    price: (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.price) || ''\n  });\n  const [image, setImage] = useState(null); // New state for image\n\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageChange = e => {\n    setImage(e.target.files[0]); // Set the selected image file\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(); // Use FormData to handle file upload\n    formData.append('name', form.name);\n    formData.append('price', form.price);\n    if (image) formData.append('image', image); // Add image to formData if selected\n\n    try {\n      if (selectedItem) {\n        // Update the item if selected\n        await axios.put(`http://localhost:5000/items/${selectedItem._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      } else {\n        // Create a new item\n        await axios.post('http://localhost:5000/items', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n      fetchItems(); // Refresh the list after the action\n      clearSelection(); // Clear selected item after the action\n      setForm({\n        name: '',\n        price: ''\n      }); // Reset form fields\n      setImage(null); // Reset image field\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: form.name,\n      onChange: handleChange,\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"price\",\n      value: form.price,\n      onChange: handleChange,\n      placeholder: \"Price\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange // Handle image selection\n      ,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [selectedItem ? 'Update' : 'Add', \" Item\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearSelection,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemForm, \"Sw0QGyzrUpbwoOKEJiOpWYPIV6M=\");\n_c = ItemForm;\nexport default ItemForm;\nvar _c;\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ItemForm","fetchItems","selectedItem","clearSelection","_s","form","setForm","name","price","image","setImage","handleChange","e","target","value","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","append","put","_id","headers","post","error","console","onSubmit","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/crud/src/components/ItemForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ItemForm = ({ fetchItems, selectedItem, clearSelection }) => {\r\n  const [form, setForm] = useState({\r\n    name: selectedItem?.name || '',\r\n    price: selectedItem?.price || '',\r\n  });\r\n\r\n  const [image, setImage] = useState(null); // New state for image\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]); // Set the selected image file\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(); // Use FormData to handle file upload\r\n    formData.append('name', form.name);\r\n    formData.append('price', form.price);\r\n    if (image) formData.append('image', image); // Add image to formData if selected\r\n\r\n    try {\r\n      if (selectedItem) {\r\n        // Update the item if selected\r\n        await axios.put(`http://localhost:5000/items/${selectedItem._id}`, formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n      } else {\r\n        // Create a new item\r\n        await axios.post('http://localhost:5000/items', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n      }\r\n      fetchItems(); // Refresh the list after the action\r\n      clearSelection(); // Clear selected item after the action\r\n      setForm({ name: '', price: '' }); // Reset form fields\r\n      setImage(null); // Reset image field\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        placeholder=\"Name\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        name=\"price\"\r\n        value={form.price}\r\n        onChange={handleChange}\r\n        placeholder=\"Price\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleImageChange} // Handle image selection\r\n        accept=\"image/*\"\r\n      />\r\n      <button type=\"submit\">{selectedItem ? 'Update' : 'Add'} Item</button>\r\n      {selectedItem && <button onClick={clearSelection}>Cancel</button>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}