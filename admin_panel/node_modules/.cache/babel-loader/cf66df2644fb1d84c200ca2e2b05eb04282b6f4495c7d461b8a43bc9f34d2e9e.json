{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\crud\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ItemForm from './components/ItemForm';\nimport ItemList from './components/ItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]); // Initialiser items avec un tableau vide\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  // Fonction pour récupérer les items de l'API\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/items');\n      if (Array.isArray(response.data)) {\n        setItems(response.data); // Si la réponse est un tableau, on met à jour l'état\n      } else {\n        console.error('L\\'API n\\'a pas retourné un tableau valide.');\n        setItems([]); // Si la réponse est incorrecte, on vide l'état\n      }\n    } catch (error) {\n      console.error('Error fetching items:', error);\n      setItems([]); // Si l'API échoue, on vide les items\n    }\n  };\n  const selectItem = item => {\n    setSelectedItem(item);\n  };\n  const clearSelection = () => {\n    setSelectedItem(null);\n  };\n  useEffect(() => {\n    fetchItems(); // Appel à l'API pour récupérer les items dès le chargement de l'application\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Item Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      fetchItems: fetchItems,\n      selectedItem: selectedItem,\n      clearSelection: clearSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items // Assurez-vous que 'items' est un tableau\n      ,\n      fetchItems: fetchItems,\n      selectItem: selectItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"u7YA/nWvAr1G4oZqETFS2G2jXmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ItemForm","ItemList","jsxDEV","_jsxDEV","App","_s","items","setItems","selectedItem","setSelectedItem","fetchItems","response","get","Array","isArray","data","console","error","selectItem","item","clearSelection","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/crud/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ItemForm from './components/ItemForm';\r\nimport ItemList from './components/ItemList';\r\n\r\nconst App = () => {\r\n  const [items, setItems] = useState([]); // Initialiser items avec un tableau vide\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  // Fonction pour récupérer les items de l'API\r\n  const fetchItems = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/items');\r\n      if (Array.isArray(response.data)) {\r\n        setItems(response.data); // Si la réponse est un tableau, on met à jour l'état\r\n      } else {\r\n        console.error('L\\'API n\\'a pas retourné un tableau valide.');\r\n        setItems([]); // Si la réponse est incorrecte, on vide l'état\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching items:', error);\r\n      setItems([]); // Si l'API échoue, on vide les items\r\n    }\r\n  };\r\n\r\n  const selectItem = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const clearSelection = () => {\r\n    setSelectedItem(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchItems(); // Appel à l'API pour récupérer les items dès le chargement de l'application\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Item Manager</h1>\r\n      <ItemForm\r\n        fetchItems={fetchItems}\r\n        selectedItem={selectedItem}\r\n        clearSelection={clearSelection}\r\n      />\r\n      <ItemList\r\n        items={items} // Assurez-vous que 'items' est un tableau\r\n        fetchItems={fetchItems}\r\n        selectItem={selectItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6BAA6B,CAAC;MAC/D,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;QAChCR,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,6CAA6C,CAAC;QAC5DV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMW,UAAU,GAAIC,IAAI,IAAK;IAC3BV,eAAe,CAACU,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BX,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtB,OAAA,CAACH,QAAQ;MACPU,UAAU,EAAEA,UAAW;MACvBF,YAAY,EAAEA,YAAa;MAC3BY,cAAc,EAAEA;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFtB,OAAA,CAACF,QAAQ;MACPK,KAAK,EAAEA,KAAM,CAAC;MAAA;MACdI,UAAU,EAAEA,UAAW;MACvBQ,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/CID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}